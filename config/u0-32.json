{
  "segment_widths": [1, 4],
  "split_whitespace": true,
  "tag_create": {"regex_string": "^:(.*)$"},
  "rules": [
    {
      "regex_string": "^\\.(.*)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 1,
                "add_index": 0
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\$(.*)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 1,
                "add_segment": 1,
                "add_index": 0
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:0b([0-9]+),0b([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:0b([0-9]+),0h([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:0b([0-9]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:0h([0-9]+),0b([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:0h([0-9]+),0h([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:0h([0-9]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:([0-9]+),0b([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:([0-9]+),0h([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^fill:([0-9]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rread([0-3])$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^add([0-3])$",
      "segment_values": [[4],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\+=1$",
      "segment_values": [[8],[]],
      "captures": []
    }, {
      "regex_string": "^-=1$",
      "segment_values": [[9],[]],
      "captures": []
    }, {
      "regex_string": "^\\+=0b([0-1]+)$",
      "segment_values": [[4],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\+=0x([0-9A-F]+)$",
      "segment_values": [[4],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\+=([0-9]+)$",
      "segment_values": [[4],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^-=0b([0-1]+)$",
      "segment_values": [[4],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^-=0x([0-9A-F]+)$",
      "segment_values": [[4],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^-=([0-9]+)$",
      "segment_values": [[4],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\+\\+$",
      "segment_values": [[8],[]],
      "captures": []
    }, {
      "regex_string": "^--$",
      "segment_values": [[9],[]],
      "captures": []
    }, {
      "regex_string": "^carry$",
      "segment_values": [[10],[]],
      "captures": []
    }, {
      "regex_string": "^borrow$",
      "segment_values": [[11],[]],
      "captures": []
    }, {
      "regex_string": "^~$",
      "segment_values": [[12],[]],
      "captures": []
    }, {
      "regex_string": "^break$",
      "segment_values": [[13],[]],
      "captures": []
    }, {
      "regex_string": "^reads$",
      "segment_values": [[14],[]],
      "captures": []
    }, {
      "regex_string": "^return$",
      "segment_values": [[15],[]],
      "captures": []
    }, {
      "regex_string": "^continue$",
      "segment_values": [[16],[]],
      "captures": []
    }, {
      "regex_string": "^ien$",
      "segment_values": [[17],[]],
      "captures": []
    }, {
      "regex_string": "^recv$",
      "segment_values": [[18],[]],
      "captures": []
    }, {
      "regex_string": "^ld0i$",
      "segment_values": [[19],[]],
      "captures": []
    }, {
      "regex_string": "^kill$",
      "segment_values": [[20],[]],
      "captures": []
    }, {
      "regex_string": "^wait$",
      "segment_values": [[21],[]],
      "captures": []
    }, {
      "regex_string": "^getbp$",
      "segment_values": [[22],[]],
      "captures": []
    }, {
      "regex_string": "^getba$",
      "segment_values": [[23],[]],
      "captures": []
    }, {
      "regex_string": "^calli$",
      "segment_values": [[24],[]],
      "captures": []
    }, {
      "regex_string": "^calli:(.*)$",
      "segment_values": [[24],[0]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 1,
                "add_index": 0
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^enteri:(.*)$",
      "segment_values": [[24],[0, 0]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 1,
                "add_index": 0
              }, {
                "from_segment": 1,
                "add_segment": 1,
                "add_index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^jumpi$",
      "segment_values": [[25],[]],
      "captures": []
    }, {
      "regex_string": "^jumpi:(.*)$",
      "segment_values": [[25],[0]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 1,
                "add_index": 0
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^jenteri:(.*)$",
      "segment_values": [[25],[0, 0]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 1,
                "add_index": 0
              }, {
                "from_segment": 1,
                "add_segment": 1,
                "add_index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^i:-0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^i:-0x([0-9A-F]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^i:-([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^i:0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^i:0x([0-9A-F]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^i:([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^-0b([0-1]+)$",
      "segment_values": [[48],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^-0x([0-9A-F]+)$",
      "segment_values": [[48],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^-([0-9]+)$",
      "segment_values": [[48],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "negate": true,
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^0b([0-1]+)$",
      "segment_values": [[48],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^0x([0-9A-F]+)$",
      "segment_values": [[48],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^([0-9]+)$",
      "segment_values": [[48],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }
  ]
}
