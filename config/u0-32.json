{
  "segment_widths": [1, 4],
  "split_whitespace": true,
  "tag_create": {"regex_string": "^:(.*)$"},
  "rules": [
    {
      "regex_string": "^\\$WORD_BITS$",
      "segment_values": [[],[32]],
      "captures": []
    }, {
      "regex_string": "^WORD_BITS$",
      "segment_values": [[148, 32],[]],
      "captures": []
    }, {
      "regex_string": "^\\$WORD_BYTES$",
      "segment_values": [[],[4]],
      "captures": []
    }, {
      "regex_string": "^WORD_BYTES$",
      "segment_values": [[148, 4],[]],
      "captures": []
    }, {
      "regex_string": "^\\$0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\$(?:0h|0x)([0-9A-Fa-f]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\$([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\$\\$(.*)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 1,
                "add_segment": 1,
                "add_index": 0
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\$\\.(.*)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 1,
                "add_index": 0
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\$\"(.*)$",
      "segment_values": [[],[]],
      "captures": [
        {
          "Str": {
            "add_segment": 1
          }
        }
      ]
    }, {
      "regex_string": "^imm8:\\.(.*)$",
      "segment_values": [[148, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 0,
                "add_index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm16:\\.(.*)$",
      "segment_values": [[149, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\.(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }, {
                "from_segment": 0,
                "shift": -16,
                "add_segment": 0,
                "add_index": 3
              }, {
                "from_segment": 0,
                "shift": -24,
                "add_segment": 0,
                "add_index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm8:\\$(.*)$",
      "segment_values": [[148, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 1,
                "add_segment": 0,
                "add_index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm16:\\$(.*)$",
      "segment_values": [[149, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 1,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 1,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm32:\\$(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 1,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 1,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }, {
                "from_segment": 1,
                "shift": -16,
                "add_segment": 0,
                "add_index": 3
              }, {
                "from_segment": 1,
                "shift": -24,
                "add_segment": 0,
                "add_index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^\\$(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 1,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 1,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }, {
                "from_segment": 1,
                "shift": -16,
                "add_segment": 0,
                "add_index": 3
              }, {
                "from_segment": 1,
                "shift": -24,
                "add_segment": 0,
                "add_index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:0b([0-1]+),0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:0b([0-1]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:0b([0-1]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:(?:0h|0x)([0-9A-F]+),0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:(?:0h|0x)([0-9A-F]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:(?:0h|0x)([0-9A-F]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:([0-9]+),0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:([0-9]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^mfill:([0-9]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:0b([0-1]+),0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:0b([0-1]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:0b([0-1]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:(?:0h|0x)([0-9A-F]+),0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:(?:0h|0x)([0-9A-F]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:(?:0h|0x)([0-9A-F]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:([0-9]+),0b([0-1]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:([0-9]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^malign:([0-9]+),([0-9]+)$",
      "segment_values": [[],[0]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 1,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:0b([0-1]+),0b([0-1]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:0b([0-1]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:0b([0-1]+),([0-9]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:(?:0h|0x)([0-9A-F]+),0b([0-1]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:(?:0h|0x)([0-9A-F]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:(?:0h|0x)([0-9A-F]+),([0-9]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:([0-9]+),0b([0-1]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:([0-9]+),(?:0h|0x)([0-9A-F]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^palign:([0-9]+),([0-9]+)$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 0
              }
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 0,
                "fill": true,
                "align": true
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^move([0-3])$",
      "segment_values": [[0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^move([0-3]):0b(.*)$",
      "segment_values": [[0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^move([0-3]):(?:0h|0x)(.*)$",
      "segment_values": [[0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^move([0-3]):(.*)$",
      "segment_values": [[0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^raread([0-3])$",
      "segment_values": [[4],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rereadi([0-3])$",
      "segment_values": [[8],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rereadi([0-3]):0b(.*)$",
      "segment_values": [[8, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "segment": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rereadi([0-3]):(?:0h|0x)(.*)$",
      "segment_values": [[8, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "segment": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rereadi([0-3]):(.*)$",
      "segment_values": [[8, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "segment": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^inc$",
      "segment_values": [[12],[]],
      "captures": []
    }, {
      "regex_string": "^dec$",
      "segment_values": [[13],[]],
      "captures": []
    }, {
      "regex_string": "^carry$",
      "segment_values": [[14],[]],
      "captures": []
    }, {
      "regex_string": "^borrow$",
      "segment_values": [[15],[]],
      "captures": []
    }, {
      "regex_string": "^inv$",
      "segment_values": [[16],[]],
      "captures": []
    }, {
      "regex_string": "^break$",
      "segment_values": [[17],[]],
      "captures": []
    }, {
      "regex_string": "^return$",
      "segment_values": [[18],[]],
      "captures": []
    }, {
      "regex_string": "^continue$",
      "segment_values": [[19],[]],
      "captures": []
    }, {
      "regex_string": "^inten$",
      "segment_values": [[20],[]],
      "captures": []
    }, {
      "regex_string": "^intrecv$",
      "segment_values": [[21],[]],
      "captures": []
    }, {
      "regex_string": "^iloop$",
      "segment_values": [[22],[]],
      "captures": []
    }, {
      "regex_string": "^iloop:(.*)$",
      "segment_values": [[22, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1,
                "offset": -4
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2,
                "offset": -4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^kill$",
      "segment_values": [[23],[]],
      "captures": []
    }, {
      "regex_string": "^intwait$",
      "segment_values": [[24],[]],
      "captures": []
    }, {
      "regex_string": "^getbp$",
      "segment_values": [[25],[]],
      "captures": []
    }, {
      "regex_string": "^getba$",
      "segment_values": [[26],[]],
      "captures": []
    }, {
      "regex_string": "^calli$",
      "segment_values": [[27],[]],
      "captures": []
    }, {
      "regex_string": "^calli:(.*)$",
      "segment_values": [[27, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }, {
                "from_segment": 0,
                "shift": -16,
                "add_segment": 0,
                "add_index": 3
              }, {
                "from_segment": 0,
                "shift": -24,
                "add_segment": 0,
                "add_index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^jmpi$",
      "segment_values": [[28],[]],
      "captures": []
    }, {
      "regex_string": "^jmpi:(.*)$",
      "segment_values": [[28, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }, {
                "from_segment": 0,
                "shift": -16,
                "add_segment": 0,
                "add_index": 3
              }, {
                "from_segment": 0,
                "shift": -24,
                "add_segment": 0,
                "add_index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bra$",
      "segment_values": [[26],[]],
      "captures": []
    }, {
      "regex_string": "^bra:(.*)$",
      "segment_values": [[26, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^cv([0-9A-Fa-f])$",
      "segment_values": [[32],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^read([0-3])$",
      "segment_values": [[48],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^read([0-3]):(.*)$",
      "segment_values": [[48, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rareadi([0-3])$",
      "segment_values": [[52],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rareadi([0-3]):(.*)$",
      "segment_values": [[52, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^get([0-3])$",
      "segment_values": [[56],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^i([0-3])$",
      "segment_values": [[60],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^writepre([0-3])$",
      "segment_values": [[64],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^writepre([0-3]):(.*)$",
      "segment_values": [[64, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^writepst([0-3])$",
      "segment_values": [[68],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^writepst([0-3]):(.*)$",
      "segment_values": [[68, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^set([0-3])$",
      "segment_values": [[72],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rawritei([0-3])$",
      "segment_values": [[76],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rawritei([0-3]):(.*)$",
      "segment_values": [[76, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rewritei([0-3])$",
      "segment_values": [[80],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rewritei([0-3]):(.*)$",
      "segment_values": [[80, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^reread([0-3])$",
      "segment_values": [[84],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^add$",
      "segment_values": [[88],[]],
      "captures": []
    }, {
      "regex_string": "^sub$",
      "segment_values": [[89],[]],
      "captures": []
    }, {
      "regex_string": "^lsl$",
      "segment_values": [[90],[]],
      "captures": []
    }, {
      "regex_string": "^lsr$",
      "segment_values": [[91],[]],
      "captures": []
    }, {
      "regex_string": "^csl$",
      "segment_values": [[92],[]],
      "captures": []
    }, {
      "regex_string": "^csr$",
      "segment_values": [[93],[]],
      "captures": []
    }, {
      "regex_string": "^asr$",
      "segment_values": [[94],[]],
      "captures": []
    }, {
      "regex_string": "^and$",
      "segment_values": [[95],[]],
      "captures": []
    }, {
      "regex_string": "^rewrite([0-3])$",
      "segment_values": [[96],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^rawrite([0-3])$",
      "segment_values": [[100],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^write$",
      "segment_values": [[104],[]],
      "captures": []
    }, {
      "regex_string": "^writep$",
      "segment_values": [[105],[]],
      "captures": []
    }, {
      "regex_string": "^writepo$",
      "segment_values": [[106],[]],
      "captures": []
    }, {
      "regex_string": "^beq$",
      "segment_values": [[107],[]],
      "captures": []
    }, {
      "regex_string": "^beq:(.*)$",
      "segment_values": [[107, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bne$",
      "segment_values": [[108],[]],
      "captures": []
    }, {
      "regex_string": "^bne:(.*)$",
      "segment_values": [[108, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bles$",
      "segment_values": [[109],[]],
      "captures": []
    }, {
      "regex_string": "^bles:(.*)$",
      "segment_values": [[109, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bleq$",
      "segment_values": [[110],[]],
      "captures": []
    }, {
      "regex_string": "^bleq:(.*)$",
      "segment_values": [[110, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^blesu$",
      "segment_values": [[111],[]],
      "captures": []
    }, {
      "regex_string": "^blesu:(.*)$",
      "segment_values": [[111, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^blequ$",
      "segment_values": [[112],[]],
      "captures": []
    }, {
      "regex_string": "^blequ:(.*)$",
      "segment_values": [[112, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^recv$",
      "segment_values": [[113],[]],
      "captures": []
    }, {
      "regex_string": "^send$",
      "segment_values": [[114],[]],
      "captures": []
    }, {
      "regex_string": "^incept$",
      "segment_values": [[115],[]],
      "captures": []
    }, {
      "regex_string": "^set$",
      "segment_values": [[116],[]],
      "captures": []
    }, {
      "regex_string": "^sel$",
      "segment_values": [[117],[]],
      "captures": []
    }, {
      "regex_string": "^setpa$",
      "segment_values": [[118],[]],
      "captures": []
    }, {
      "regex_string": "^expect$",
      "segment_values": [[119],[]],
      "captures": []
    }, {
      "regex_string": "^sef$",
      "segment_values": [[120],[]],
      "captures": []
    }, {
      "regex_string": "^reset$",
      "segment_values": [[121],[]],
      "captures": []
    }, {
      "regex_string": "^ddrop$",
      "segment_values": [[122],[]],
      "captures": []
    }, {
      "regex_string": "^addi$",
      "segment_values": [[128],[]],
      "captures": []
    }, {
      "regex_string": "^addi32$",
      "segment_values": [[128],[]],
      "captures": []
    }, {
      "regex_string": "^addi:0b(.*)$",
      "segment_values": [[128, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi:(?:0h|0x)(.*)$",
      "segment_values": [[128, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi:(.*)$",
      "segment_values": [[128, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi32:0b(.*)$",
      "segment_values": [[128, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi32:(?:0h|0x)(.*)$",
      "segment_values": [[128, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi32:(.*)$",
      "segment_values": [[128, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi8$",
      "segment_values": [[129],[]],
      "captures": []
    }, {
      "regex_string": "^addi8:0b(.*)$",
      "segment_values": [[129, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi8:(?:0h|0x)(.*)$",
      "segment_values": [[129, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi8:(.*)$",
      "segment_values": [[129, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi16$",
      "segment_values": [[130],[]],
      "captures": []
    }, {
      "regex_string": "^addi16:0b(.*)$",
      "segment_values": [[130, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi16:(?:0h|0x)(.*)$",
      "segment_values": [[130, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^addi16:(.*)$",
      "segment_values": [[130, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^subi$",
      "segment_values": [[131],[]],
      "captures": []
    }, {
      "regex_string": "^subi:0b(.*)$",
      "segment_values": [[131, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^subi:(?:0h|0x)(.*)$",
      "segment_values": [[131, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^subi:(.*)$",
      "segment_values": [[131, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^lsli$",
      "segment_values": [[132],[]],
      "captures": []
    }, {
      "regex_string": "^lsli:(.*)$",
      "segment_values": [[132, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^csli$",
      "segment_values": [[133],[]],
      "captures": []
    }, {
      "regex_string": "^csli:(.*)$",
      "segment_values": [[133, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^asri$",
      "segment_values": [[134],[]],
      "captures": []
    }, {
      "regex_string": "^asri:(.*)$",
      "segment_values": [[134, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^andi$",
      "segment_values": [[135],[]],
      "captures": []
    }, {
      "regex_string": "^andi:0b(.*)$",
      "segment_values": [[135, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^andi:(?:0h|0x)(.*)$",
      "segment_values": [[135, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^andi:(.*)$",
      "segment_values": [[135, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^ori$",
      "segment_values": [[136],[]],
      "captures": []
    }, {
      "regex_string": "^ori:0b(.*)$",
      "segment_values": [[136, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^ori:(?:0h|0x)(.*)$",
      "segment_values": [[136, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^ori:(.*)$",
      "segment_values": [[136, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^xori$",
      "segment_values": [[137],[]],
      "captures": []
    }, {
      "regex_string": "^xori:0b(.*)$",
      "segment_values": [[137, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^xori:(?:0h|0x)(.*)$",
      "segment_values": [[137, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^xori:(.*)$",
      "segment_values": [[137, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bc$",
      "segment_values": [[138],[]],
      "captures": []
    }, {
      "regex_string": "^bc:(.*)$",
      "segment_values": [[138, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bnc$",
      "segment_values": [[139],[]],
      "captures": []
    }, {
      "regex_string": "^bnc:(.*)$",
      "segment_values": [[139, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bo$",
      "segment_values": [[140],[]],
      "captures": []
    }, {
      "regex_string": "^bo:(.*)$",
      "segment_values": [[140, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bno$",
      "segment_values": [[141],[]],
      "captures": []
    }, {
      "regex_string": "^bno:(.*)$",
      "segment_values": [[141, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bi$",
      "segment_values": [[142],[]],
      "captures": []
    }, {
      "regex_string": "^bi:(.*)$",
      "segment_values": [[142, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bni$",
      "segment_values": [[143],[]],
      "captures": []
    }, {
      "regex_string": "^bni:(.*)$",
      "segment_values": [[143, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^index([0-3])$",
      "segment_values": [[144],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^index([0-3]):(.*)$",
      "segment_values": [[144, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }, {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm8$",
      "segment_values": [[148],[]],
      "captures": []
    }, {
      "regex_string": "^imm8:0b(.*)$",
      "segment_values": [[148, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm8:(?:0h|0x)(.*)$",
      "segment_values": [[148, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm8:(.*)$",
      "segment_values": [[148, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm16$",
      "segment_values": [[149],[]],
      "captures": []
    }, {
      "regex_string": "^imm16:0b(.*)$",
      "segment_values": [[149, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm16:(?:0h|0x)(.*)$",
      "segment_values": [[149, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm16:(.*)$",
      "segment_values": [[149, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm32$",
      "segment_values": [[150],[]],
      "captures": []
    }, {
      "regex_string": "^imm32:0b(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm32:(?:0h|0x)(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^imm32:(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^getp$",
      "segment_values": [[152],[]],
      "captures": []
    }, {
      "regex_string": "^geta$",
      "segment_values": [[153],[]],
      "captures": []
    }, {
      "regex_string": "^or$",
      "segment_values": [[160],[]],
      "captures": []
    }, {
      "regex_string": "^xor$",
      "segment_values": [[161],[]],
      "captures": []
    }, {
      "regex_string": "^read$",
      "segment_values": [[162],[]],
      "captures": []
    }, {
      "regex_string": "^call$",
      "segment_values": [[163],[]],
      "captures": []
    }, {
      "regex_string": "^jmp$",
      "segment_values": [[164],[]],
      "captures": []
    }, {
      "regex_string": "^intset$",
      "segment_values": [[165],[]],
      "captures": []
    }, {
      "regex_string": "^seb$",
      "segment_values": [[166],[]],
      "captures": []
    }, {
      "regex_string": "^slb$",
      "segment_values": [[167],[]],
      "captures": []
    }, {
      "regex_string": "^usb$",
      "segment_values": [[168],[]],
      "captures": []
    }, {
      "regex_string": "^intsend$",
      "segment_values": [[169],[]],
      "captures": []
    }, {
      "regex_string": "^loop$",
      "segment_values": [[170],[]],
      "captures": []
    }, {
      "regex_string": "^loop:(.*)$",
      "segment_values": [[170, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1,
                "offset": -4
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2,
                "offset": -4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bz$",
      "segment_values": [[171],[]],
      "captures": []
    }, {
      "regex_string": "^bz:(.*)$",
      "segment_values": [[171, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^bnz$",
      "segment_values": [[172],[]],
      "captures": []
    }, {
      "regex_string": "^bnz:(.*)$",
      "segment_values": [[172, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^writepi$",
      "segment_values": [[173],[]],
      "captures": []
    }, {
      "regex_string": "^writepi:(.*)$",
      "segment_values": [[173, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }, {
                "from_segment": 0,
                "shift": -16,
                "add_segment": 0,
                "add_index": 3
              }, {
                "from_segment": 0,
                "shift": -24,
                "add_segment": 0,
                "add_index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^writepri$",
      "segment_values": [[174],[]],
      "captures": []
    }, {
      "regex_string": "^writepri:(.*)$",
      "segment_values": [[174, 0, 0],[]],
      "captures": [
        {
          "Tag": {
            "feedbacks": [
              {
                "from_segment": 0,
                "relative": true,
                "shift": 0,
                "add_segment": 0,
                "add_index": 1
              }, {
                "from_segment": 0,
                "relative": true,
                "shift": -8,
                "add_segment": 0,
                "add_index": 2
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^drop$",
      "segment_values": [[175],[]],
      "captures": []
    }, {
      "regex_string": "^rot([0-9]|[1-5][0-9]|6[0-3])$",
      "segment_values": [[192],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^copy([0-9]|[1-5][0-9]|6[0-3])$",
      "segment_values": [[224],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {}
            ]
          }
        }
      ]
    }, {
      "regex_string": "^0b(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 2,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^(?:0h|0x)(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 16,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }, {
      "regex_string": "^(.*)$",
      "segment_values": [[150, 0, 0, 0, 0],[]],
      "captures": [
        {
          "Num": {
            "base": 10,
            "feedbacks": [
              {
                "shift": 0,
                "index": 1
              }, {
                "shift": -8,
                "index": 2
              }, {
                "shift": -16,
                "index": 3
              }, {
                "shift": -24,
                "index": 4
              }
            ]
          }
        }
      ]
    }
  ]
}
